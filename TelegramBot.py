import telebot
import random
from stories import list_with_stories
TOKEN = '6358142376:AAGf3KBI6YHn3GqQPHDyMdkOEWEUPYLjNAk'
bot = telebot.TeleBot(TOKEN)

list_with_jokes = ['–§–µ—è –≤—ñ–¥ –≤—ñ–¥—å–º–∏ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞—Å—Ç—Ä–æ—î–º.',
                   '- –©–æ —Ü–µ? –®–∏–ª–æ?\n- –ù—ñ. –¶–µ —à—Ç–æ–ø–æ—Ä —Å—Ç–µ—Ä—Å—è!',
                   '- –•–æ—á–µ—à –≤–∏–ø–∏—Ç–∏?\n- –ù—ñ, —Å–ø–∞—Å–∏–±—ñ.\n- –¢–æ–¥—ñ –ø–æ—Ç—Ä–∏–º–∞–π –ø–ª—è—à–∫—É.',
                   '–ù–µ —Ç–∞–∫ —Å—Ç—Ä–∞—à–Ω–æ, —è–∫—â–æ —Ç–µ–±–µ –Ω–∞–∑–≤—É—Ç—å –¥—É—Ä–Ω–µ–º, –≥—ñ—Ä—à–µ - —è–∫—â–æ –≤–∏—è–≤–ª—è—Ç—å—Å—è –ø—Ä–∞–≤—ñ.',
                   '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ –≤–¥–∞–≤—Å—è - —Ü–µ –∫–æ–ª–∏ —Ç—Ä—É–¥–æ–≤—É –∫–Ω–∏–∂–∫—É —Ç–æ–±—ñ –ø—Ä–∏–≤–µ–∑–ª–∏ –≤—ñ–¥—Ä–∞–∑—É –¥–æ–¥–æ–º—É.',
                   '–Ø–∫—â–æ —Ü—É–∫–æ—Ä —â–µ –ø–æ–¥–æ—Ä–æ–∂—á–∞—î, –π–æ–≥–æ –º–æ–∂–Ω–∞ –±—É–¥–µ –¥–∞—Ä—É–≤–∞—Ç–∏ –Ω–∞ —é–≤—ñ–ª–µ—ó —Ç–∞ –≤–µ—Å—ñ–ª–ª—è.',
                   '–ë–æ—ó—à—Å—è —Å—Ç—Ä–∏–±–∞—Ç–∏ –∑ –ø–∞—Ä–∞—à—É—Ç–æ–º?\n‚Äì –¢–∞–∫.\n‚Äì –°—Ç—Ä–∏–±–∞–π –±–µ–∑ –Ω—å–æ–≥–æ.',
                   '–ù—ñ–∫–æ–ª–∏ –Ω–µ —Å–º—ñ–π—Å—è –∑ —Ü–∏–≥–∞–Ω–∞, —â–æ —ó–¥–µ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥—ñ.–¶–µ –º–æ–∂–µ –±—É—Ç–∏ —Ç–≤—ñ–π –≤–µ–ª–æ—Å–∏–ø–µ–¥.',
                   '–∞ –º‚Äô—è—Å–æ–∫–æ–º–±—ñ–Ω–∞—Ç—ñ –æ–¥–Ω–∞ –∫–æ—Ä–æ–≤–∞ –∑–∞–ø–∏—Ç—É—î —ñ–Ω—à—É:‚Äì –¢–∏ —Ç—É—Ç –≤–ø–µ—Ä—à–µ?\n‚Äì –ù—ñ, –±–ª—ñ–Ω, —É–¥—Ä—É–≥–µ!',
                   'B –Ω–∞—à—ñ–π —Å—ñ–º‚Äô—ó –∑–∞—Ä—è–¥–∫–æ—é –∑–∞–π–º–∞—é—Ç—å—Å—è –ª–∏—à–µ –º–æ–±—ñ–ª—å–Ω—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏‚Ä¶',
                   '–ß–æ–ª–æ–≤—ñ–∫ –∑ –¥—Ä—É–∂–∏–Ω–æ—é –≤–Ω–æ—á—ñ —É –ª—ñ–∂–∫—É:\n‚Äì –ö–æ—Ö–∞–Ω–∏–π, –≤—ñ–∑—å–º–∏ –º–µ–Ω–µ.\n‚Äì –°–ø–∏, —è –Ω—ñ–∫—É–¥–∏ –Ω–µ —ó–¥—É.',
                   '–ü—Ä–∏–≤—ñ—Ç, –≥–æ–≤–æ—Ä–∏—Ç–∏ –º–æ–∂–µ—à?\n‚Äì –¢–∞–∫, –∑ —Ç—Ä—å–æ—Ö —Ä–æ–∫—ñ–≤.',
                   '–©–æ –í–∞–º –∑–∞–≤–∞–∂–∞—î —Å—Ö—É–¥–Ω—É—Ç–∏?\n‚Äì –í—ñ–¥—á—É—Ç—Ç—è –≥–æ–ª–æ–¥—É!',
                   ]


# Game
def play_game(message):
    chat_id = message.chat.id
    user_choice = message.text.lower()
    choices = ['ü™®', '‚úÇÔ∏è', 'üìã']

    if user_choice not in choices:
        bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∏–±–µ—Ä–∏ –∫–∞–º—ñ–Ω—å, –Ω–æ–∂–∏—Ü—ñ –∞–±–æ –±—É–º–∞–≥—É.")
    else:
        bot_choice = random.choice(choices)
        bot.reply_to(message, f"–¢–∏ –æ–±—Ä–∞–≤ {user_choice}, –∞ —è –æ–±—Ä–∞–≤ {bot_choice}.")

        if user_choice == bot_choice:
            bot.send_message(chat_id, "–ù—ñ—á–∏—è!")
        elif user_choice == 'ü™®' and bot_choice == '‚úÇÔ∏è' or \
                user_choice == '‚úÇÔ∏è' and bot_choice == 'üìã' or \
                user_choice == 'üìã' and bot_choice == 'ü™®':
            bot.send_message(chat_id, "–¢–∏ –ø–µ—Ä–µ–º—ñ–≥!")
        else:
            bot.send_message(chat_id, "–Ø –ø–µ—Ä–µ–º—ñ–≥!")

    start(message)


# Function for film recommendation
def rec_film(message):
    dict1 = {'–î—Ä–∞–º–∞': 'https://www.imdb.com/search/title/?genres=drama&title_type=feature&explore=genres',
             '–¢—Ä—ñ–ª–ª–µ—Ä': 'https://www.imdb.com/search/title/?title_type=feature&genres=thriller',
             '–ï–∫—à–Ω': 'https://www.imdb.com/search/title/?title_type=feature&genres=action&start=51&ref_=adv_nxt',
             '–ê–Ω—ñ–º–∞—Ü—ñ–π–Ω–∏–π —Ñ—ñ–ª—å–º': 'https://www.imdb.com/search/title/?title_type=feature&genres=animation',
             '–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∏–π —Ñ—ñ–ª—å–º': 'https://www.imdb.com/search/title/?genres=documentary',
             '–ö–æ–º–µ–¥—ñ—è': 'https://www.imdb.com/search/title/?title_type=feature&genres=comedy'
             }
    for elem in dict1:
        if elem == message.text:
            url_link = dict1[elem]
            markup = telebot.types.InlineKeyboardMarkup()
            button1 = telebot.types.InlineKeyboardButton("–°–∞–π—Ç –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ —Ñ—ñ–ª—å–º–∞–º–∏", url=url_link)
            markup.add(button1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)

    start(message)


# Function for book recommendation
def rec_books(message):
    dict1 = {'–ö–ª–∞—Å–∏–∫–∞': 'https://www.panmacmillan.com/blogs/classics/classic-books-to-read-before-you-die',
             '–î–µ—Ç–µ–∫—Ç–∏–≤': 'https://prowritingaid.com/detective-books',
             '–†–æ–º–∞–Ω': 'https://www.goodhousekeeping.com/life/entertainment/g26143680/best-romance-novels/',
             '–§–µ–Ω—Ç–µ–∑—ñ': 'https://time.com/collection/100-best-fantasy-books/',
             '–ú—ñ—Å—Ç–∏–∫–∞': 'https://www.shortform.com/best-books/genre/best-mysticism-books-of-all-time',
             '–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è, –°–∞–º–æ—Ä–æ–∑–≤–∏—Ç–æ–∫': 'https://reedsy.com/discovery/blog/psychology-books'
             }
    for elem in dict1:
        if elem == message.text:
            url_link = dict1[elem]
            markup = telebot.types.InlineKeyboardMarkup()
            button1 = telebot.types.InlineKeyboardButton("–°–∞–π—Ç –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –∫–Ω–∏–∂–∫–∞–º–∏", url=url_link)
            markup.add(button1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)

    start(message)


# Function for game recommendation
def rec_games(message):
    dict1 = {'–®—É—Ç–µ—Ä': 'https://www.gamesradar.com/best-shooters/',
             '–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä': 'https://gamerant.com/best-platformer-games-metacritic/#super-mario-3d-world---93',
             '–°—Ç—Ä–∞—Ç–µ–≥—ñ—è': 'https://www.pcgamer.com/the-best-strategy-games/',
             'Tower Defense': 'https://parade.com/1056226/marynliles/best-tower-defense-games/',
             '–ü—Ä–∏–≥–æ–¥–∏': 'https://www.gamesradar.com/best-adventure-games/',
             '–°–ø–æ—Ä—Ç': 'https://www.gamesradar.com/best-sports-games/'
             }
    for elem in dict1:
        if elem == message.text:
            url_link = dict1[elem]
            markup = telebot.types.InlineKeyboardMarkup()
            button1 = telebot.types.InlineKeyboardButton("–°–∞–π—Ç –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ —ñ–≥—Ä–∞–º–∏", url=url_link)
            markup.add(button1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)

    start(message)


# Function for songs recommendation
def rec_songs(message):
    dict1 = {'–†–æ–∫': 'https://open.spotify.com/playlist/37i9dQZF1DX6KANutsQaVe',
             '–ü–æ–ø': 'https://open.spotify.com/playlist/3ZgmfR6lsnCwdffZUan8EA',
             '–†–µ–ø': 'https://open.spotify.com/playlist/6p3IRyXLrl28mu33AHtqnj',
             '–ï–ª–µ–∫—Ç—Ä–æ': 'https://open.spotify.com/playlist/1zsMB814a8VhwohGe2ZTpd',
             '–†–µ–π–≤': 'https://open.spotify.com/playlist/3ybZkcoA09pYekp0DIo1OP',
             '–§–æ–Ω–∫': 'https://open.spotify.com/playlist/37i9dQZF1DWWY64wDtewQt'
             }
    for elem in dict1:
        if elem == message.text:
            url_link = dict1[elem]
            markup = telebot.types.InlineKeyboardMarkup()
            button1 = telebot.types.InlineKeyboardButton("–í—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π  –ø–ª–µ–π–ª—ñ—Å—Ç —É Spotify", url=url_link)
            markup.add(button1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)

    start(message)


def jokes(message):
    global list_with_jokes
    random_val = random.randint(1, len(list_with_jokes) - 1)
    random_joke = list_with_jokes[random_val]
    bot.send_message(message.chat.id, random_joke)


list1 = list_with_stories


def story(message):
    global list1
    rand_val = random.randint(1, len(list1) - 1)
    rand_story = list1[rand_val]
    bot.send_message(message.chat.id, rand_story)


@bot.message_handler(commands=['start'])
def start(message):
    typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton('üòÜ–í–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç')
    item2 = telebot.types.KeyboardButton('üìö–Ø–∫—É –∫–Ω–∏–∂–∫—É –º–µ–Ω—ñ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏?')
    item3 = telebot.types.KeyboardButton('üéÆ–í —è–∫—É –≥—Ä—É –º–µ–Ω—ñ –ø–æ–≥—Ä–∞—Ç–∏?')
    item4 = telebot.types.KeyboardButton('üó£–†–æ–∑–∫–∞–∂–∏ —Ü—ñ–∫–∞–≤—É —ñ—Å—Ç–æ—Ä—ñ—é')
    item5 = telebot.types.KeyboardButton('üé∏–Ø–∫—É –º—É–∑–∏–∫—É –ø–æ—Å–ª—É—Ö–∞—Ç–∏?')
    item6 = telebot.types.KeyboardButton('üé≤–î–∞–≤–∞–π –ø–æ–≥—Ä–∞—î–º–æ!')
    item7 = telebot.types.KeyboardButton('üé¨–Ø–∫–∏–π —Ñ—ñ–ª—å–º –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å?')
    typ.add(item1, item2, item3, item4, item5, item6, item7)

    bot.send_message(message.chat.id, " {0.first_name}, –û–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é.".format(message.from_user),
                     reply_markup=typ)


@bot.message_handler(content_types=['text', 'number'])
def bot_message(message):
    if message.chat.type == 'private':
        # Back
        if message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = telebot.types.KeyboardButton('üòÜ–í–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç')
            item2 = telebot.types.KeyboardButton('üìö–Ø–∫—É –∫–Ω–∏–∂–∫—É –º–µ–Ω—ñ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏?')
            item3 = telebot.types.KeyboardButton('üéÆ–í —è–∫—É –≥—Ä—É –º–µ–Ω—ñ –ø–æ–≥—Ä–∞—Ç–∏?')
            item4 = telebot.types.KeyboardButton('üó£–†–æ–∑–∫–∞–∂–∏ —Ü—ñ–∫–∞–≤—É —ñ—Å—Ç–æ—Ä—ñ—é')
            item5 = telebot.types.KeyboardButton('üé∏–Ø–∫—É –º—É–∑–∏–∫—É –ø–æ—Å–ª—É—Ö–∞—Ç–∏?')
            item6 = telebot.types.KeyboardButton('üé≤–î–∞–≤–∞–π –ø–æ–≥—Ä–∞—î–º–æ!')
            item7 = telebot.types.KeyboardButton('üé¨–Ø–∫–∏–π —Ñ—ñ–ª—å–º –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å?')
            typ.add(item1, item2, item3, item4, item5, item6, item7)

            bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ –¥—ñ—é", reply_markup=typ)

        # Film recommendation
        elif message.text == 'üé¨–Ø–∫–∏–π —Ñ—ñ–ª—å–º –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å?':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = telebot.types.KeyboardButton('–î—Ä–∞–º–∞')
            item_2 = telebot.types.KeyboardButton('–¢—Ä—ñ–ª–ª–µ—Ä')
            item_3 = telebot.types.KeyboardButton('–ï–∫—à–Ω')
            item_4 = telebot.types.KeyboardButton('–ê–Ω—ñ–º–∞—Ü—ñ–π–Ω–∏–π —Ñ—ñ–ª—å–º')
            item_5 = telebot.types.KeyboardButton('–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∏–π —Ñ—ñ–ª—å–º')
            item_6 = telebot.types.KeyboardButton('–ö–æ–º–µ–¥—ñ—è')
            back = telebot.types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')

            typ.add(item_1, item_2, item_3, item_4, item_5, item_6, back)
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä–∏ –∂–∞–Ω—Ä: ', reply_markup=typ)
            bot.register_next_step_handler(msg, rec_film)

        # Book recommendation
        elif message.text == 'üìö–Ø–∫—É –∫–Ω–∏–∂–∫—É –º–µ–Ω—ñ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏?':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = telebot.types.KeyboardButton('–ö–ª–∞—Å–∏–∫–∞')
            item_2 = telebot.types.KeyboardButton('–î–µ—Ç–µ–∫—Ç–∏–≤')
            item_3 = telebot.types.KeyboardButton('–†–æ–º–∞–Ω')
            item_4 = telebot.types.KeyboardButton('–§–µ–Ω—Ç–µ–∑—ñ')
            item_5 = telebot.types.KeyboardButton('–ú—ñ—Å—Ç–∏–∫–∞')
            item_6 = telebot.types.KeyboardButton('–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è, –°–∞–º–æ—Ä–æ–∑–≤–∏—Ç–æ–∫')
            back = telebot.types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')

            typ.add(item_1, item_2, item_3, item_4, item_5, item_6, back)
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä–∏ –∂–∞–Ω—Ä: ', reply_markup=typ)
            bot.register_next_step_handler(msg, rec_books)

        # Game recommendation
        elif message.text == 'üéÆ–í —è–∫—É –≥—Ä—É –º–µ–Ω—ñ –ø–æ–≥—Ä–∞—Ç–∏?':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = telebot.types.KeyboardButton('–®—É—Ç–µ—Ä')
            item_2 = telebot.types.KeyboardButton('–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä')
            item_3 = telebot.types.KeyboardButton('–°—Ç—Ä–∞—Ç–µ–≥—ñ—è')
            item_4 = telebot.types.KeyboardButton('Tower Defense')
            item_5 = telebot.types.KeyboardButton('–ü—Ä–∏–≥–æ–¥–∏')
            item_6 = telebot.types.KeyboardButton('–°–ø–æ—Ä—Ç')
            back = telebot.types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')

            typ.add(item_1, item_2, item_3, item_4, item_5, item_6, back)
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä–∏ –∂–∞–Ω—Ä: ', reply_markup=typ)
            bot.register_next_step_handler(msg, rec_games)

        # Music recommendation
        elif message.text == 'üé∏–Ø–∫—É –º—É–∑–∏–∫—É –ø–æ—Å–ª—É—Ö–∞—Ç–∏?':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = telebot.types.KeyboardButton('–†–æ–∫')
            item_2 = telebot.types.KeyboardButton('–ü–æ–ø')
            item_3 = telebot.types.KeyboardButton('–†–µ–ø')
            item_4 = telebot.types.KeyboardButton('–ï–ª–µ–∫—Ç—Ä–æ')
            item_5 = telebot.types.KeyboardButton('–†–µ–π–≤')
            item_6 = telebot.types.KeyboardButton('–§–æ–Ω–∫')
            back = telebot.types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')

            typ.add(item_1, item_2, item_3, item_4, item_5, item_6, back)
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä–∏ –∂–∞–Ω—Ä: ', reply_markup=typ)
            bot.register_next_step_handler(msg, rec_songs)

        # Game
        elif message.text == 'üé≤–î–∞–≤–∞–π –ø–æ–≥—Ä–∞—î–º–æ!':
            typ = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            item_1 = telebot.types.KeyboardButton('ü™®')
            item_2 = telebot.types.KeyboardButton('‚úÇÔ∏è')
            item_3 = telebot.types.KeyboardButton('üìã')
            back = telebot.types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')

            typ.add(item_1, item_2, item_3, back)
            bot.send_message(message.chat.id, '–ì—Ä–∞: –ö–∞–º—ñ–Ω—å –ù–æ–∂–∏—Ü—ñ –ë—É–º–∞–≥–∞')
            msg = bot.send_message(message.chat.id, '–û–±–µ—Ä–∏ —á–∏–º –∑—ñ–≥—Ä–∞—î—à', reply_markup=typ)
            bot.register_next_step_handler(msg, play_game)

        # Jokes
        elif message.text == 'üòÜ–í–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç':
            bot.send_message(message.chat.id, '–û—Å—å –∂–∞—Ä—Ç —è–∫–∏–π –º–æ–∂–µ —Ç–æ–±—ñ —Å–ø–æ–¥–æ–±–∞—Ç–∏—Å—è')
            jokes(message)

        # Interesting story
        elif message.text == 'üó£–†–æ–∑–∫–∞–∂–∏ —Ü—ñ–∫–∞–≤—É —ñ—Å—Ç–æ—Ä—ñ—é':
            bot.send_message(message.chat.id, '–û—Å—å —Ü—ñ–∫–∞–≤–∞ —ñ—Å—Ç–æ—Ä—ñ—è')
            story(message)


bot.polling(none_stop=True)
